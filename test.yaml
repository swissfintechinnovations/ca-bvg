openapi: 3.0.0
info:
  version: 3.3.0
  title: Common Mortgage API (Public)
  description: >
    This specification defines a common mortgage API for mortgages as used in Switzerland.
    The API is supposed to be used by requesting parties who want to get, extend, or transfer mortgages from and to financial institutions.
    This specification uses schema definitions from the Common Data Model v1.2.2.
  termsOfService: Tbd
  contact:
    email: info@common-api.ch
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: https://mortgage.common-api.ch
externalDocs:
  description: Find out more about SFTI API specifications
  url: https://www.common-api.ch
tags:
  - name: tag
    description: description

security:
  - ApiKeyAuth: []
  - OAuth2:
      - read
      - write

paths:
  /test:
    get:
      tags:
        - tag
      summary: Test endpoint
      description: This is a get endpoint, intended to deserve as an example.
      parameters:
        - $ref: '#/components/parameters/test'
      responses:
        '200':
          headers:
            X-Correlation-ID:
              $ref: '#/components/headers/X-Correlation-ID'
          description: Paginated list of all mortgage cases with all related information sorted by caseId.
          content:
            application/json:
              schema:
                type: object
                properties:
                  caseList:
                    type: array
                    items:
                      $ref: '#/components/schemas/MortgageCase'
                  _links:
                    $ref: '#/components/schemas/linksPagination'

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: X-API-Key

    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://example.com/oauth/authorize
          tokenUrl: https://example.com/oauth/token
          scopes:
            read: Grants read access
            write: Grants write access

  schemas:
  parameters:
    test:
      name: test
      in: path
      description: Uuid v4
      required: true
      schema:
        type: string
        format: uuid
        example: bcb5d762-8d28-43a2-9398-393b2e8d56ba
  headers:
  responses:

